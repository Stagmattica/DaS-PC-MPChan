push eax
push ebx
push ecx
push edx

mov eax, [esp+0x20] #steamid (upper half)
mov eax, [eax]
mov edx, [esp+0x20] #steamid (lower half)
mov edx, [edx+4]
mov ebx, 0 #counter
mov ecx, dword ptr [0xDEADBEEF] #LISTTYPE
cmp ecx, 0
je blocklist
jmp whitelist

blocklist:
mov ecx, 0xDEADBEEF #BLOCKLIST 
b_looptop:
cmp eax, [ecx+ebx]
jne b_loopcontinue
cmp edx, [ecx+ebx+04]
je abortread
b_loopcontinue:
add ebx, 0x8
cmp ebx, 0xDEADBEEF #BLOCKLIST_SIZE
jl b_looptop
jmp normalread

whitelist:
mov ecx, 0xDEADBEEF #WHITELIST 
w_looptop:
cmp eax, [ecx+ebx]
jne w_loopcontinue
cmp edx, [ecx+ebx+04]
je normalread
w_loopcontinue:
add ebx, 0x8
cmp ebx, 0xDEADBEEF #WHITELIST_SIZE
jl w_looptop
jmp abortread

abortread:
pop edx
pop ecx
pop ebx
pop eax
mov al, 0 #return false
ret 0x14

normalread:
pop edx
pop ecx
pop ebx
pop eax